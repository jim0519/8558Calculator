// <auto-generated />
using System;
using AspNetCoreWebApp.DbModels;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AspNetCoreWebApp.Migrations
{
    [DbContext(typeof(AutoPostAdDealSplashContext))]
    [Migration("20180804074306_V3")]
    partial class V3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AspNetCoreWebApp.DbModels.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cookie")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .IsUnicode(false);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Gateway")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("Ipaddress")
                        .IsRequired()
                        .HasColumnName("IPAddress")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Netmask")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("UserAgent")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Account");
                });

            modelBuilder.Entity("AspNetCoreWebApp.DbModels.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddressName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("GeoLatitude")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("GeoLongitude")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("PostCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("AspNetCoreWebApp.DbModels.AutoPostAdHeader", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<DateTime>("PostDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("AutoPostAdHeader");
                });

            modelBuilder.Entity("AspNetCoreWebApp.DbModels.AutoPostAdLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ExternalId")
                        .IsRequired()
                        .HasColumnName("ExternalID")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("HeaderId")
                        .HasColumnName("HeaderID");

                    b.Property<DateTime>("PostDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("HeaderId");

                    b.ToTable("AutoPostAdLine");
                });

            modelBuilder.Entity("AspNetCoreWebApp.DbModels.AutoPostAdPostData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId")
                        .HasColumnName("AccountID");

                    b.Property<int>("AdTypeId")
                        .HasColumnName("AdTypeID");

                    b.Property<int>("AddressId")
                        .HasColumnName("AddressID");

                    b.Property<string>("BusinessLogoPath")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .IsUnicode(false);

                    b.Property<int>("CategoryId")
                        .HasColumnName("CategoryID");

                    b.Property<int>("CustomFieldGroupId")
                        .HasColumnName("CustomFieldGroupID");

                    b.Property<string>("CustomId")
                        .IsRequired()
                        .HasColumnName("CustomID")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("Description")
                        .IsRequired()
                        .IsUnicode(false);

                    b.Property<string>("ImagesPath")
                        .IsRequired()
                        .IsUnicode(false);

                    b.Property<int>("InventoryQty");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .IsUnicode(false);

                    b.Property<decimal>("Postage");

                    b.Property<decimal>("Price");

                    b.Property<int>("ScheduleRuleId")
                        .HasColumnName("ScheduleRuleID");

                    b.Property<string>("Sku")
                        .IsRequired()
                        .HasColumnName("SKU")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("AddressId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CustomFieldGroupId");

                    b.HasIndex("ScheduleRuleId");

                    b.ToTable("AutoPostAdPostData");
                });

            modelBuilder.Entity("AspNetCoreWebApp.DbModels.AutoPostAdResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdId")
                        .IsRequired()
                        .HasColumnName("AdID")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("AutoPostAdDataId")
                        .HasColumnName("AutoPostAdDataID");

                    b.Property<DateTime>("PostDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("AutoPostAdDataId");

                    b.ToTable("AutoPostAdResult");
                });

            modelBuilder.Entity("AspNetCoreWebApp.DbModels.CustomFieldGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("CustomFieldGroup");
                });

            modelBuilder.Entity("AspNetCoreWebApp.DbModels.CustomFieldLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomFieldGroupId")
                        .HasColumnName("CustomFieldGroupID");

                    b.Property<string>("FieldName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("FieldValue")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("CustomFieldGroupId");

                    b.ToTable("CustomFieldLine");
                });

            modelBuilder.Entity("AspNetCoreWebApp.DbModels.DataField", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DataFieldName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("DataField");
                });

            modelBuilder.Entity("AspNetCoreWebApp.DbModels.ProductCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryId")
                        .IsRequired()
                        .HasColumnName("CategoryID")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int>("CategoryTypeId")
                        .HasColumnName("CategoryTypeID");

                    b.Property<string>("ParentCategoryId")
                        .IsRequired()
                        .HasColumnName("ParentCategoryID")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("TemplateId")
                        .HasColumnName("TemplateID");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ParentCategoryId");

                    b.HasIndex("TemplateId");

                    b.ToTable("ProductCategory");
                });

            modelBuilder.Entity("AspNetCoreWebApp.DbModels.ScheduleRule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .IsUnicode(false);

                    b.Property<string>("EditBy")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .IsUnicode(false);

                    b.Property<DateTime>("EditTime")
                        .HasColumnType("datetime");

                    b.Property<int>("IntervalDay");

                    b.Property<DateTime>("LastSuccessTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .IsUnicode(false);

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("ScheduleRule");
                });

            modelBuilder.Entity("AspNetCoreWebApp.DbModels.ScheduleRuleLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("EditBy")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .IsUnicode(false);

                    b.Property<DateTime>("EditTime")
                        .HasColumnType("datetime");

                    b.Property<int>("ScheduleRuleId")
                        .HasColumnName("ScheduleRuleID");

                    b.Property<DateTime>("TimeRangeFrom")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("TimeRangeTo")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("ScheduleRuleId");

                    b.ToTable("ScheduleRuleLine");
                });

            modelBuilder.Entity("AspNetCoreWebApp.DbModels.ScheduleTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Enabled");

                    b.Property<DateTime?>("LastEndTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("LastStartTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("LastSuccessTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int>("Seconds");

                    b.Property<bool>("StopOnError");

                    b.Property<string>("Type")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("ScheduleTask");
                });

            modelBuilder.Entity("AspNetCoreWebApp.DbModels.Skumapping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NewSku")
                        .HasColumnName("NewSKU")
                        .HasMaxLength(500);

                    b.Property<string>("OldSku")
                        .HasColumnName("OldSKU")
                        .HasMaxLength(500);

                    b.HasKey("Id");

                    b.ToTable("SKUMapping");
                });

            modelBuilder.Entity("AspNetCoreWebApp.DbModels.Template", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TemplateName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Template");
                });

            modelBuilder.Entity("AspNetCoreWebApp.DbModels.TemplateField", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DataFieldId")
                        .HasColumnName("DataFieldID");

                    b.Property<string>("DefaultValue")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<bool>("IsRequireInput");

                    b.Property<int>("Order");

                    b.Property<string>("TemplateFieldName")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int>("TemplateFieldType");

                    b.Property<int>("TemplateId")
                        .HasColumnName("TemplateID");

                    b.HasKey("Id");

                    b.HasIndex("DataFieldId");

                    b.HasIndex("TemplateId");

                    b.ToTable("TemplateField");
                });

            modelBuilder.Entity("AspNetCoreWebApp.DbModels.AutoPostAdLine", b =>
                {
                    b.HasOne("AspNetCoreWebApp.DbModels.AutoPostAdHeader", "Header")
                        .WithMany("AutoPostAdLine")
                        .HasForeignKey("HeaderId")
                        .HasConstraintName("FK_AutoPostAdLine_AutoPostAdHeader")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AspNetCoreWebApp.DbModels.AutoPostAdPostData", b =>
                {
                    b.HasOne("AspNetCoreWebApp.DbModels.Account", "Account")
                        .WithMany("AutoPostAdPostData")
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK_AutoPostAdPostData_Account");

                    b.HasOne("AspNetCoreWebApp.DbModels.Address", "Address")
                        .WithMany("AutoPostAdPostData")
                        .HasForeignKey("AddressId")
                        .HasConstraintName("FK_AutoPostAdPostData_Address");

                    b.HasOne("AspNetCoreWebApp.DbModels.CustomFieldGroup", "CustomFieldGroup")
                        .WithMany("AutoPostAdPostData")
                        .HasForeignKey("CustomFieldGroupId")
                        .HasConstraintName("FK_AutoPostAdPostData_CustomFieldGroup");

                    b.HasOne("AspNetCoreWebApp.DbModels.ScheduleRule", "ScheduleRule")
                        .WithMany("AutoPostAdPostData")
                        .HasForeignKey("ScheduleRuleId")
                        .HasConstraintName("FK_AutoPostAdPostData_ScheduleRule");
                });

            modelBuilder.Entity("AspNetCoreWebApp.DbModels.AutoPostAdResult", b =>
                {
                    b.HasOne("AspNetCoreWebApp.DbModels.AutoPostAdPostData", "AutoPostAdData")
                        .WithMany("AutoPostAdResult")
                        .HasForeignKey("AutoPostAdDataId")
                        .HasConstraintName("FK_AutoPostAdResult_AutoPostAdPostData")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AspNetCoreWebApp.DbModels.CustomFieldLine", b =>
                {
                    b.HasOne("AspNetCoreWebApp.DbModels.CustomFieldGroup", "CustomFieldGroup")
                        .WithMany("CustomFieldLine")
                        .HasForeignKey("CustomFieldGroupId")
                        .HasConstraintName("FK_CustomFieldLine_CustomFieldGroup")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AspNetCoreWebApp.DbModels.ProductCategory", b =>
                {
                    b.HasOne("AspNetCoreWebApp.DbModels.Template", "Template")
                        .WithMany("ProductCategory")
                        .HasForeignKey("TemplateId")
                        .HasConstraintName("FK_ProductCategory_Template");
                });

            modelBuilder.Entity("AspNetCoreWebApp.DbModels.ScheduleRuleLine", b =>
                {
                    b.HasOne("AspNetCoreWebApp.DbModels.ScheduleRule", "ScheduleRule")
                        .WithMany("ScheduleRuleLine")
                        .HasForeignKey("ScheduleRuleId")
                        .HasConstraintName("FK_ScheduleRuleLine_ScheduleRule")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AspNetCoreWebApp.DbModels.TemplateField", b =>
                {
                    b.HasOne("AspNetCoreWebApp.DbModels.DataField", "DataField")
                        .WithMany("TemplateField")
                        .HasForeignKey("DataFieldId")
                        .HasConstraintName("FK_TemplateField_DataField")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AspNetCoreWebApp.DbModels.Template", "Template")
                        .WithMany("TemplateField")
                        .HasForeignKey("TemplateId")
                        .HasConstraintName("FK_TemplateField_Template")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
